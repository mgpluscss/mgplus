{"mappings":"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","sources":["src/index.js","src/plugins/mgDropdown.js","src/plugins/mgModal.js","src/plugins/mgNav.js","src/plugins/mgTabs.js"],"sourcesContent":["import registerDropdown from \"./plugins/mgDropdown.js\";\nimport registerModals from \"./plugins/mgModal.js\";\nimport registerNavs from \"./plugins/mgNav.js\";\nimport registerTabs from \"./plugins/mgTabs.js\"; \n  \n\n(function(window) {\n\n\n  function registerDomPlugins(){\n \n    registerDropdown();\n    registerModals();\n    registerNavs();\n    registerTabs(); \n  }\n  \n  // extracts the params from the currently running (external) script \n  function getScriptUrl() {\n    const scripts = document.getElementsByTagName('script'); \n    \n     for(let i=0; i < scripts.length; i++)\n     { \n      const scriptUrl= scripts[i] && scripts[i].src;\n    \n      if (scriptUrl.indexOf(\"mgplus-dom.js\") > 0)\n      {  \n        console.log(scripts[i]);\n        return scriptUrl;\n      }\n      else \n      console.log(scriptUrl)\n     } \n     return null;\n  }\n  \n  // gets the Query Params of a given query string \n  function getQueryParam(name, query) {\n    name = name.replace(/[[]/, \"\\\\\\[\").replace(/[]]/, \"\\\\\\]\");\n    var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n    var regex = new RegExp(regexS);\n    var results = regex.exec(query);\n    if (results == null)\n        return \"\";\n    else\n        return results[1];\n  }\nwindow.mgplus = {registerDomPlugins};\nwindow.addEventListener(\"DOMContentLoaded\", ()=>{\n  \n  const autorun = getQueryParam(\"autorun\", getScriptUrl());\n\n  if (autorun === true)\n  {\n    registerDomPlugins();\n  }\n}) \n})(window);\n\n"," export default function registergDropdowns() {\n   let currentDropdown = null; \n   document.querySelectorAll(\"[data-toggle~=dropdown]\").forEach(setupDropdown);\n   function setupDropdown(dropdownToggle) {\n     dropdownToggle.setAttribute(\"aria-haspopup\", \"true\");\n     dropdownToggle.setAttribute(\"aria-expanded\", \"false\");\n\n     const dropdownContent = dropdownToggle.parentNode.querySelector(\".mg-dropdown--content\");\n\n     dropdownContent.setAttribute(\"aria-hidden\", \"true\");\n\n     dropdownToggle.onclick = toggleDropdown;\n\n     function toggleDropdown(e) {\n       e.preventDefault();\n       e.stopPropagation();\n       if (dropdownToggle.getAttribute(\"aria-expanded\") === \"true\") {\n         dropdownToggle.setAttribute(\"aria-expanded\", \"false\");\n         dropdownContent.setAttribute(\"aria-hidden\", \"true\");\n         dropdownToggle.parentNode.classList.remove(\"opened\");\n         currentDropdown = null;\n         return;\n       }\n       closeCurrent.call(undefined);\n\n       dropdownToggle.setAttribute(\"aria-expanded\", \"true\");\n       dropdownContent.setAttribute(\"aria-hidden\", \"false\");\n       dropdownToggle.parentNode.classList.add(\"opened\");\n       dropdownContent.children[0].focus();\n       currentDropdown = dropdownToggle;\n       return;\n     }\n   }\n   function closeCurrent() {\n     if (currentDropdown) {\n       currentDropdown.setAttribute(\"aria-expanded\", \"false\");\n       currentDropdown.setAttribute(\"aria-hidden\", \"true\");\n       currentDropdown.parentNode.classList.remove(\"opened\");\n       currentDropdown = false;\n     }\n   }  \n   \n    window.onclick = function (event) {\n      const element = event.target\n    \n       if (!element.classList) return;\n       if (element.classList.contains(\"mg-dropdown\")) return;\n       if (element.classList.contains(\"mg-dropdown--button\")) return;\n       if (element.classList.contains(\"mg-dropdown--content\")) return;\n       closeCurrent.call(undefined);  \n     };\n \n}\n \n\n","export default function registerModals() {\n    // Select all elements with data-toggle attribute containing \"modal\" and setup modal for each\n    document.querySelectorAll(\"[data-toggle~=modal]\").forEach(setupModal);\n  \n    // Function to setup modal for an element\n    function setupModal(el) {\n\n      console.log(\"setting up modal\")\n      // Function to handle modal removal\n      function removeModalHandler() {\n        modal.classList.remove(\"mg-show\");      \n      }\n   \n      // Select the modal and close button elements\n      var modal = document.querySelector(\"#\" + el.getAttribute(\"data-target\"));\n\n      var  close = modal.querySelector(\"[data-action=close]\");\n  \n      // Add event listener to the element to show modal on click\n      el.addEventListener(\"click\", function (ev) {\n        modal.classList.add(\"mg-show\");\n      });\n  \n      // Add event listener to the close button to remove modal on click\n      close.addEventListener(\"click\", function (ev) {\n        ev.stopPropagation();\n        removeModalHandler();\n      });\n    } \n  }\n ","export default function registerNavs(){\n    document.querySelectorAll(\"[data-toggle~=nav]\").forEach(setupNav);\n    function setupNav(nav) {\n      const items = nav.getElementsByTagName(\"li\");\n    \n      for (let j = 0; j < items.length; j++) {\n        const item = items[j];\n    \n        if (\n          item.classList.contains(\"active\") ||\n          item.getAttribute(\"data-active\") === \"true\"      \n        ) {\n          item.setAttribute(\"data-active\", \"true\");\n          item.classList.add(\"active\");\n        }\n      }\n    \n      nav.addEventListener(\"click\", function (e) {\n        let selector = e.target;\n        console.log(e.target.parentNode);\n        if (e.target.parentNode.tagName == \"LI\") {\n          selector = e.target.parentNode;\n        }\n        if (selector.getAttribute(\"data-active\") !== \"true\") {\n          //disable all selected tabs\n          let items = nav.getElementsByTagName(\"li\");\n          for (let j = 0; j < items.length; j++) {\n            const item = items[j];\n            item.classList.remove(\"active\");\n            item.setAttribute(\"data-active\", \"false\");\n          }\n          //activate selected tab\n          selector.classList.add(\"active\");\n          selector.setAttribute(\"data-active\", \"true\");\n        }\n      });\n    }\n  }","export default function registerTabs(){\n    document.querySelectorAll(\"[data-toggle~=tabs]\").forEach(setupTabs);\n    function setupTabs(tabs) {\n      let items = tabs.getElementsByClassName(\"mg-tabs--item\");\n  \n      for (let j = 0; j < items.length; j++) {\n        const item = items[j];\n        if (\n          item.classList.contains(\"active\") ||\n          item.getAttribute(\"data-active\") === \"true\"\n        ) {\n  \n          item.setAttribute(\"data-active\", \"true\");\n          item.classList.add(\"active\");\n  \n          const targetToShow = item.getAttribute(\"data-target\");\n  \n          if (targetToShow) \n          {\n            const el = document.getElementById(targetToShow);\n           if (el)\n           { el.style.display = \"block\";\n          }\n          }\n        }\n      }\n  \n      tabs.addEventListener(\"click\", function (e) {\n        let selector = e.target;\n        if (e.target.parentNode.classList.contains(\"mg-tabs--item\")) {\n          selector = e.target.parentNode;\n  \n          e.stopPropagation();\n          e.preventDefault();\n  \n          if (selector.getAttribute(\"data-active\") !== \"true\") {\n            //disable all selected tabs\n            let items = tabs.getElementsByClassName(\"mg-tabs--item\");\n  \n            for (let j = 0; j < items.length; j++) {\n              const item = items[j];\n              item.classList.remove(\"active\")\n              item.setAttribute(\"data-active\", \"false\");\n              let targetToHide = item.getAttribute(\"data-target\");\n              if (targetToHide) {\n                const el = document.getElementById(targetToHide);\n                if (el)\n                {\n                    el.style.display = \"none\";\n              }\n              }\n            }\n            //activate selected tab\n            selector.classList.add(\"active\");\n            selector.setAttribute(\"data-active\", \"true\");\n            let targetToShow = selector.getAttribute(\"data-target\");\n            if (targetToShow) {\n            const el = document.getElementById(targetToShow);\n            if (el)\n            {\n              el.style.display = \"block\";\n            }\n            }\n          }\n        }\n      });\n    } \n  }"],"names":[],"version":3,"file":"mgplus-dom.js.map"}