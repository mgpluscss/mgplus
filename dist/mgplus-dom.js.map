{"mappings":"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","sources":["src/index.js","src/plugins/mgDropdown.js","src/plugins/mgModal.js","src/plugins/mgNav.js","src/plugins/mgTabs.js"],"sourcesContent":["import registerDropdown from \"./plugins/mgDropdown.js\";\r\nimport registerModals from \"./plugins/mgModal.js\";\r\nimport registerNavs from \"./plugins/mgNav.js\";\r\nimport registerTabs from \"./plugins/mgTabs.js\";\r\n\r\n(function (window) {\r\n  function registerDomPlugins(autorun) {\r\n   \r\n    registerDropdown();\r\n    registerModals();\r\n    registerNavs();\r\n    registerTabs();\r\n\r\n    console.log(\r\n      `mgplus - registered DOM plugins (autorun=${autorun ? \"true\" : \"false\"})`\r\n    );\r\n\r\n  }\r\n\r\n  // extracts the params from the currently running (external) script\r\n  function getScriptUrl() {\r\n    const scripts = document.getElementsByTagName(\"script\");\r\n\r\n    for (let i = 0; i < scripts.length; i++) {\r\n      const scriptUrl = scripts[i] && scripts[i].src;\r\n\r\n      if (scriptUrl.indexOf(\"mgplus-dom.js\") > 0) {\r\n        return scriptUrl;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // gets the Query Params of a given query string\r\n  function getQueryParam(name, query) {\r\n    name = name.replace(/[[]/, \"\\\\[\").replace(/[]]/, \"\\\\]\");\r\n    var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\r\n    var regex = new RegExp(regexS);\r\n    var results = regex.exec(query);\r\n\r\n    if (results == null) return \"\";\r\n    else return results[1];\r\n  }\r\n  window.mgplus = { registerDomPlugins };\r\n  window.addEventListener(\"DOMContentLoaded\", () => {\r\n    const autorun = getQueryParam(\"autorun\", getScriptUrl());\r\n\r\n    if (autorun === \"true\") {\r\n      registerDomPlugins(true);\r\n    }\r\n  });\r\n})(window);\r\n"," export default function registergDropdowns() {\r\n   let currentDropdown = null; \r\n   document.querySelectorAll(\"[data-toggle~=dropdown]\").forEach(setupDropdown);\r\n   function setupDropdown(dropdownToggle) {\r\n     dropdownToggle.setAttribute(\"aria-haspopup\", \"true\");\r\n     dropdownToggle.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n     const dropdownContent = dropdownToggle.parentNode.querySelector(\".mg-dropdown--content\");\r\n\r\n     dropdownContent.setAttribute(\"aria-hidden\", \"true\");\r\n\r\n     dropdownToggle.onclick = toggleDropdown;\r\n\r\n     function toggleDropdown(e) {\r\n       e.preventDefault();\r\n       e.stopPropagation();\r\n       if (dropdownToggle.getAttribute(\"aria-expanded\") === \"true\") {\r\n         dropdownToggle.setAttribute(\"aria-expanded\", \"false\");\r\n         dropdownContent.setAttribute(\"aria-hidden\", \"true\");\r\n         dropdownToggle.parentNode.classList.remove(\"opened\");\r\n         currentDropdown = null;\r\n         return;\r\n       }\r\n       closeCurrent.call(undefined);\r\n\r\n       dropdownToggle.setAttribute(\"aria-expanded\", \"true\");\r\n       dropdownContent.setAttribute(\"aria-hidden\", \"false\");\r\n       dropdownToggle.parentNode.classList.add(\"opened\");\r\n       dropdownContent.children[0].focus();\r\n       currentDropdown = dropdownToggle;\r\n       return;\r\n     }\r\n   }\r\n   function closeCurrent() {\r\n     if (currentDropdown) {\r\n       currentDropdown.setAttribute(\"aria-expanded\", \"false\");\r\n       currentDropdown.setAttribute(\"aria-hidden\", \"true\");\r\n       currentDropdown.parentNode.classList.remove(\"opened\");\r\n       currentDropdown = false;\r\n     }\r\n   }  \r\n   \r\n    window.onclick = function (event) {\r\n      const element = event.target\r\n    \r\n       if (!element.classList) return;\r\n       if (element.classList.contains(\"mg-dropdown\")) return;\r\n       if (element.classList.contains(\"mg-dropdown--button\")) return;\r\n       if (element.classList.contains(\"mg-dropdown--content\")) return;\r\n       closeCurrent.call(undefined);  \r\n     };\r\n \r\n}\r\n \r\n\r\n","export default function registerModals() {\r\n    // Select all elements with data-toggle attribute containing \"modal\" and setup modal for each\r\n    document.querySelectorAll(\"[data-toggle~=modal]\").forEach(setupModal);\r\n  \r\n    // Function to setup modal for an element\r\n    function setupModal(el) { \r\n     \r\n      // Function to handle modal removal\r\n      function removeModalHandler() {\r\n        modal.classList.remove(\"mg-show\");      \r\n      }\r\n   \r\n      // Select the modal and close button elements\r\n      var modal = document.querySelector(\"#\" + el.getAttribute(\"data-target\"));\r\n\r\n      var  close = modal.querySelector(\"[data-action=close]\");\r\n  \r\n      // Add event listener to the element to show modal on click\r\n      el.addEventListener(\"click\", function (ev) {\r\n        modal.classList.add(\"mg-show\");\r\n      });\r\n  \r\n      // Add event listener to the close button to remove modal on click\r\n      close.addEventListener(\"click\", function (ev) {\r\n        ev.stopPropagation();\r\n        removeModalHandler();\r\n      });\r\n    } \r\n  }\r\n ","export default function registerNavs(){\r\n    document.querySelectorAll(\"[data-toggle~=nav]\").forEach(setupNav);\r\n    function setupNav(nav) {\r\n      const items = nav.getElementsByTagName(\"li\");\r\n    \r\n      for (let j = 0; j < items.length; j++) {\r\n        const item = items[j];\r\n    \r\n        if (\r\n          item.classList.contains(\"active\") ||\r\n          item.getAttribute(\"data-active\") === \"true\"      \r\n        ) {\r\n          item.setAttribute(\"data-active\", \"true\");\r\n          item.classList.add(\"active\");\r\n        }\r\n      }\r\n    \r\n      nav.addEventListener(\"click\", function (e) {\r\n        let selector = e.target;\r\n        console.log(e.target.parentNode);\r\n        if (e.target.parentNode.tagName == \"LI\") {\r\n          selector = e.target.parentNode;\r\n        }\r\n        if (selector.getAttribute(\"data-active\") !== \"true\") {\r\n          //disable all selected tabs\r\n          let items = nav.getElementsByTagName(\"li\");\r\n          for (let j = 0; j < items.length; j++) {\r\n            const item = items[j];\r\n            item.classList.remove(\"active\");\r\n            item.setAttribute(\"data-active\", \"false\");\r\n          }\r\n          //activate selected tab\r\n          selector.classList.add(\"active\");\r\n          selector.setAttribute(\"data-active\", \"true\");\r\n        }\r\n      });\r\n    }\r\n  }","export default function registerTabs(){\r\n    document.querySelectorAll(\"[data-toggle~=tabs]\").forEach(setupTabs);\r\n    function setupTabs(tabs) {\r\n      let items = tabs.getElementsByClassName(\"mg-tabs--item\");\r\n  \r\n      for (let j = 0; j < items.length; j++) {\r\n        const item = items[j];\r\n        if (\r\n          item.classList.contains(\"active\") ||\r\n          item.getAttribute(\"data-active\") === \"true\"\r\n        ) {\r\n  \r\n          item.setAttribute(\"data-active\", \"true\");\r\n          item.classList.add(\"active\");\r\n  \r\n          const targetToShow = item.getAttribute(\"data-target\");\r\n  \r\n          if (targetToShow) \r\n          {\r\n            const el = document.getElementById(targetToShow);\r\n           if (el)\r\n           { el.style.display = \"block\";\r\n          }\r\n          }\r\n        }\r\n      }\r\n  \r\n      tabs.addEventListener(\"click\", function (e) {\r\n        let selector = e.target;\r\n        if (e.target.parentNode.classList.contains(\"mg-tabs--item\")) {\r\n          selector = e.target.parentNode;\r\n  \r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n  \r\n          if (selector.getAttribute(\"data-active\") !== \"true\") {\r\n            //disable all selected tabs\r\n            let items = tabs.getElementsByClassName(\"mg-tabs--item\");\r\n  \r\n            for (let j = 0; j < items.length; j++) {\r\n              const item = items[j];\r\n              item.classList.remove(\"active\")\r\n              item.setAttribute(\"data-active\", \"false\");\r\n              let targetToHide = item.getAttribute(\"data-target\");\r\n              if (targetToHide) {\r\n                const el = document.getElementById(targetToHide);\r\n                if (el)\r\n                {\r\n                    el.style.display = \"none\";\r\n              }\r\n              }\r\n            }\r\n            //activate selected tab\r\n            selector.classList.add(\"active\");\r\n            selector.setAttribute(\"data-active\", \"true\");\r\n            let targetToShow = selector.getAttribute(\"data-target\");\r\n            if (targetToShow) {\r\n            const el = document.getElementById(targetToShow);\r\n            if (el)\r\n            {\r\n              el.style.display = \"block\";\r\n            }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } \r\n  }"],"names":[],"version":3,"file":"mgplus-dom.js.map"}